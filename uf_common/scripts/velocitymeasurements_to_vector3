#!/usr/bin/env python

from __future__ import division

import math

import numpy

import roslib
roslib.load_manifest('uf_common')
import rospy
from geometry_msgs.msg import Vector3, Vector3Stamped

from uf_common.orientation_helpers import xyz_array
from uf_common.msg import VelocityMeasurements


rospy.init_node('velocitymeasurements_to_vector3')

vel_pub = rospy.Publisher('vel', Vector3Stamped)
def cb(msg):
    msg.velocity_measurements = [x for x in msg.velocity_measurements
        if not math.isnan(x.velocity)]
    A = numpy.zeros((len(msg.velocity_measurements), 3))
    for i, velocity_measurement in enumerate(msg.velocity_measurements):
        A[i] = xyz_array(velocity_measurement.direction)
    b = [velocity_measurement.velocity for velocity_measurement in msg.velocity_measurements]
    x, residuals, rank, s = numpy.linalg.lstsq(A, b)
    if rank < len(x):
        rospy.logerr('velocity not observable!')
        return
    vel_pub.publish(Vector3Stamped(
        header=msg.header,
        vector=Vector3(*x),
    ))
rospy.Subscriber('velocitymeasurements', VelocityMeasurements, cb)

rospy.spin()

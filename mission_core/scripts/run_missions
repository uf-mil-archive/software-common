#!/usr/bin/python

import sys
import traceback
import signal

from twisted.internet import defer, reactor

import txros
from txros import util


def parse_arg(arg):
    x = arg.split(',')
    return x[0], x[1:]

@util.cancellableInlineCallbacks
def main():
    try:
        nh = yield txros.NodeHandle.from_argv('run_missions')
        
        missions = [(name, __import__(name, fromlist=['main']).main, args)
            for name, args in map(parse_arg, sys.argv[1:])]
        
        for name, func, args in missions:
            print
            print 'Starting', name
            print
            yield func(nh, *args)
            print
            print 'Finished', name
            print
    except Exception:
        traceback.print_exc()
    finally:
        reactor.stop()

def _start():
    signal.signal(signal.SIGINT, lambda signum, frame: reactor.callFromThread(task.cancel))
    task = main().addErrback(lambda fail: fail.trap(defer.CancelledError))
reactor.callWhenRunning(_start)
reactor.run()

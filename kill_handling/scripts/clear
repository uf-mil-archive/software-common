#!/usr/bin/env python

import sys

import roslib
roslib.load_manifest('kill_handling')
import rospy

from std_msgs.msg import Header
from kill_handling.msg import KillsStamped
from kill_handling.msg import Kill
from kill_handling.srv import SetKill

kills = None

def clear_all_cb(msg):
	global kills
	kills = msg.kills

rospy.init_node('clear', anonymous=True)

set_kill = rospy.ServiceProxy('/set_kill', SetKill)

if len(sys.argv) > 1:
	# If an id is passed on cmd clear only that id
	for i in range(1, len(sys.argv)):
		name = str(sys.argv[i])
		rospy.loginfo('Clearing: %s', name)
		try:
			set_kill(Kill(
				header=Header(
					stamp=rospy.Time.now(),
				),
				id=name,
				), True)
		except rospy.service.ServiceException, e:
			rospy.logwarn(str(e))
		
else:	
	rospy.loginfo('Subscribing to /kill')
	rospy.Subscriber('/kill', KillsStamped, clear_all_cb)

	# Wait until we have a kill msg
	while kills == None:
		pass

	# Clear everything
	for kill in kills:
		rospy.loginfo('Clearing: %s', kill.id)
		set_kill(Kill(
			header=Header(
				stamp=rospy.Time.now(),
			),
			id=kill.id,
			), True)
